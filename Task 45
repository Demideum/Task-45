namespace Task_45
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Station route = new Station();
            bool isWork = true;
            string userInput;

            while (isWork)
            {
                Console.SetCursorPosition(0, 10);
                Console.WriteLine("\n Выбирите номер команды:" +
                    "\n1. Создать новый маршрут;" +
                    "\n2. Выход.");

                userInput = Console.ReadLine();
                Console.Clear();

                switch (userInput)
                {
                    case "1":
                        route.Work();
                        break;

                    case "2":
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine("Ввод неверный. Повторите ввод.");
                        break;
                }
            }
        }
    }
}

class Station
{
    public string PlaceDeparture { get; private set; }
    public string PlaceArrival { get; private set; }

    public void Work()
    {
        TicketOffice sellTickets = new TicketOffice();
        Train train = new Train();
        Console.SetCursorPosition(0, 15);
        MakeRoute();
        sellTickets.SellTickets();
        train.MakeTrain(train, sellTickets);
        Console.ReadLine();
        Console.Clear();
        DirectionInfo(train, sellTickets);
        Console.ReadLine();
    }

    public void MakeRoute()
    {
        Console.Write("\nСоздание маршрута.\nВведите пункт отправления: ");
        PlaceDeparture = Console.ReadLine();
        Console.Write("\nВведите пункт прибытия: ");
        PlaceArrival = Console.ReadLine();
        Console.WriteLine($"\nМаршрут {PlaceDeparture} - {PlaceArrival} создан");
    }

    public void DirectionInfo(Train train, TicketOffice tickets)
    {
        Console.SetCursorPosition(0, 0);
        Console.WriteLine($"Поезд {PlaceDeparture} - {PlaceArrival} отправляется в путь. Продано {tickets.SoldTickets} билетов. " +
            $"Вагоны рассчитаны на {train.Capacity} пассажиров. В поезде {train.RailwayCarriage} вагонов.");
    }
}

class TicketOffice
{
    public int SoldTickets { get; private set; }

    public void SellTickets()
    {
        Random random = new Random();
        int minSoldTickets = 100;
        int maxSoldTickets = 600;

        SoldTickets = random.Next(minSoldTickets, maxSoldTickets);
        Console.WriteLine($"\nНа маршрут продано {SoldTickets} билетов.");
    }
}

class Train
{
    private const int CapacityFirstClass = 20;
    private const int CapacitySecondClass = 30;
    private const int CapacityEconomyClass = 50;
    public int RailwayCarriage { get; internal set; }
    public int Capacity { get; private set; }

    public void MakeTrain(Train train, TicketOffice tickets)
    {
        string trainClass;
        bool isMakeTrain = true;

        Console.WriteLine($"\nВведите класс поезда: " +
            $"\nЛюкс - {CapacityFirstClass} мест в вагоне. " +
            $"\nКупе - {CapacitySecondClass} мест в вагоне. " +
            $"\nЭконом - {CapacityEconomyClass} мест в вагоне.");

        while (isMakeTrain)
        {
            trainClass = Console.ReadLine();

            if (trainClass == "Люкс")
            {
                Capacity = CapacityFirstClass;
                isMakeTrain = false;
            }
            else if (trainClass == "Купе")
            {
                Capacity = CapacitySecondClass;
                isMakeTrain = false;
            }
            else if (trainClass == "Эконом")
            {
                Capacity = CapacityEconomyClass;
                isMakeTrain = false;
            }
            else
            {
                Console.WriteLine("Ввод неверный. Повторите ввод.");
            }
        }

        if (tickets.SoldTickets % Capacity != 0)
        {
            train.RailwayCarriage = tickets.SoldTickets / Capacity + 1;
        }
        else
        {
            train.RailwayCarriage = tickets.SoldTickets / Capacity;
        }
        Console.WriteLine($"\nК отправке готовится поезд из {train.RailwayCarriage} вагонов. Вместительность каждого вагона - {Capacity}.");
    }
}
